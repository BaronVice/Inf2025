"""
На предприятии каждой изготовленной детали присваивают серийный номер,
содержащий десятичные цифры, 52 латинские буквы (с учётом регистра) и символы из 963-символьного специального алфавита.
В базе данных для хранения каждого серийного номера отведено одинаковое и минимально возможное число байт.

При этом используется посимвольное кодирование серийных номеров,
все символы кодируются одинаковым и минимально возможным числом бит.

Известно, что для хранения 2000 серийных номеров отведено не более 693 Кбайт памяти.
Определите максимально возможную длину серийного номера.
В ответе запишите только целое число.
"""
# Задача похожа на 7
"""
Посчитаем мощность алфавита:
...десятичные цифры, 52 латинские буквы (с учётом регистра) и символы из 963-символьного специального алфавита...
10 + 52 + 963 = 1025

При этом используется посимвольное кодирование серийных номеров,
все символы кодируются одинаковым и минимально возможным числом бит.
N <= 2**i, где N - мощность алфавита, i - количество памяти в бит, выделяемой на хранение одного символа.
1025 <= 2**i
i = 11

- В базе данных для хранения каждого серийного номера отведено одинаковое и минимально возможное число байт
(очень важно - серийный номер хранится в байтах)
Известно, что для хранения 2000 серийных номеров отведено не более 693 Кбайт памяти.
Определите максимально возможную длину серийного номера.
V/n = ceil(i * l / 8), -- / 8 как раз потому что серийный номер хранится в байтах
где V - отведенная память на хранение n номеров в байт из l символов, каждый из которых занимает i бит
ceil - функция округления в большую сторону (поскольку число байт должно быть целым)

693 * 1024 / 2000 >= ceil(11 * l) / 8
"""

from math import ceil # можно и без него:
# (11 * l // 8) + (1 if (11 * l) % 8 != 0 else 0)

l = 1
while 693 * 1024 / 2000 >= ceil(11 * l / 8):
    l += 1
print(l-1) # 257
