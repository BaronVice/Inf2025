
# Решение 1: оно довольно длинное, но с ответом думать не надо
# Состоит из трех частей
# 1) Перебор пустых значений в таблице
# 2) Перебор переменных в столбцы
# 3) Проверка строк на выполнение условий

# Количество циклов = количество пропусков в таблице
# i11 - первая строка первый столбец,
# i12 - первая строка второй столбец,
# i21 - вторая строка второй столбец, ...

# in [0, 1] - всего возможны два значения
for i11 in [0, 1]:
    for i12 in [0, 1]:
        for i14 in [0, 1]:
            for i21 in [0, 1]:
                for i23 in [0, 1]:
                    for i24 in [0, 1]:
                        for i31 in [0, 1]:
                            # Для простоты построим табличку
                            # Можно добавить последнее значение каждой строки F
                            # Но я этого делать не буду, поскольку для всех строк F = 0
                            t = (
                                (i11, i12, 1, i14),
                                (i21, 0, i23, i24),
                                (i31, 1, 0, 0)
                            )
                            # Перед перебором x, y, z, w проверю, что строки различны
                            # (по условию: "... фрагмент из трех различных ее строк ...")
                            # Это такая проверка на то, что строки различны
                            if len({t[0], t[1], t[2]}) == 3:
                                # Подбираю номера столбцов для x, y, z, w
                                for x in range(4):
                                    for y in range(4):
                                        for z in range(4):
                                            for w in range(4):
                                                # Это такая проверка на то, что у каждой переменной свой номер столбца
                                                if len({x,y,z,w}) == 4:
                                                    # a - количество строк, с выполненным условием
                                                    # если их будет насчитано 3, то переменные подобраны
                                                    a = 0
                                                    # Для каждой строки проверю выполнение условия
                                                    for row in t:
                                                        # Импликация (->) это <=
                                                        # Важно отрицание выносить в скобки: -z как (not z)
                                                        if (((row[w] <= row[y]) <= row[x]) or (not row[z])) == 0: a += 1
                                                    if a == 3:
                                                        print(f"wxyz: {w+1}{x+1}{y+1}{z+1}")
                                                        break

# Решение может и выглядит страшно. 
# Есть и более короткое (2-alternative.py), но в нем придется думать.
# Решение без объяснений в 2-shorter.py
