"""
Исполнитель Черепаха действует на плоскости с декартовой системой координат.
В начальный момент Черепаха находится в начале координат,
её голова направлена вдоль положительного направления оси ординат,
хвост опущен.

При опущенном хвосте Черепаха оставляет на поле след в виде линии.
В каждый конкретный момент известно положение исполнителя и направление его движения.
У исполнителя существует 6 команд:
Поднять хвост, означающая переход к перемещению без рисования;
Опустить хвост, означающая переход в режим рисования;
Вперёд n (где n – целое число), вызывающая передвижение Черепахи на n единиц в том направлении, куда указывает её голова;
Назад n (где n – целое число), вызывающая передвижение в противоположном голове направлении;
Направо m (где m – целое число), вызывающая изменение направления движения на m градусов по часовой стрелке,
Налево m (где m – целое число), вызывающая изменение направления движения на m градусов против часовой стрелки.

Запись Повтори k [Команда1 Команда2 … КомандаS] означает, что последовательность из S команд повторится k раз.

Черепахе был дан для исполнения следующий алгоритм:
Повтори 9 [Вперёд 22 Направо 90 Вперёд 6 Направо 90]
Поднять хвост
Вперёд 1 Направо 90 Вперёд 5 Налево 90
Опустить хвост
Повтори 9 [Вперёд 53 Направо 90 Вперёд 75 Направо 90]

Определите периметр области пересечения фигур, ограниченных заданными алгоритмом линиями.
"""

from turtle import *

seth(90) # ... её голова направлена вдоль положительного направления оси ординат
speed(0) # если нужно посмотреть, как черепаха рисует, то speed(1)

k = 10 # масштаб (количество пикселей на единицу измерения)
for i in range(9): # Повтори 9
    forward(k * 22) # Вперёд 22
    right(90) # Направо 90
    forward(k * 6) # Вперёд 6
    right(90) # Направо 90

color("green") # Следующая линия будет зеленой
forward(k * 1) # Вперёд 1
right(90) # Направо 90
color("red") # И красной
forward(k * 5) # Вперёд 5
left(90) # Направо 90
color("black")
for i in range(9): # Повтори 9
    forward(k * 53) # Вперёд 53
    right(90) # Направо 90
    forward(k * 75) # Вперёд 75
    right(90) # Направо 90

done() # чтобы окно не закрывалось

# Фигуры нарисовали, определим периметр области пересечения фигур (6.png)
