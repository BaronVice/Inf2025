# https://inf-ege.sdamgia.ru/problem?id=46981

"""
Исполнитель преобразует число на экране.
У исполнителя есть три команды, которым присвоены номера:
1. Прибавить 1.
2. Прибавить 2.
3. Умножить на 2.
Первая команда увеличивает число на экране на 1,
вторая увеличивает его на 2, третья умножает на 2.

Программа для исполнителя — это последовательность команд.
Сколько существует программ, которые преобразуют исходное число 1 в число 11
и при этом не содержат двух команд умножения подряд?
"""

# Добавим в рекурсию переменную, которая будет отображать,
# Было ли использовано умножение на предыдущем шаге или нет
# Если не использовано - применим, иначе пропустим
from functools import lru_cache

@lru_cache(100000)
def calc(n, used):
    if n == 11: return 1
    if n > 11 : return 0
    
    # Используем сложение - used = False
    res = calc(n + 1, False) + calc(n + 2, False)
    # Если умножение не использовано, то можно посчитать n * 2
    if not used: res += calc(n * 2, True)

    return res

# При запуске used = False
print(calc(1, False))
        