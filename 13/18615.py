# 18615 здесь https://kompege.ru/task

"""
В терминологии сетей TCP/IP маской сети называется двоичное число, определяющее,
какая часть IP-адреса узла сети относится к адресу сети, а какая – к адресу самого узла в этой сети.
* При этом в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого места – нули.
* Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.
Например, если IP-адрес узла равен 231.32.255.131, а маска 255.255.240.0, то адрес сети равен 231.32.240.0.

Узел с IP-адресом 143.131.211.37 принадлежит сети, в которой 15 IP-адресов,
двоичная запись которых содержит ровно 10 единиц.

Сколько единиц содержится в двоичной записи маски этой сети?
"""

"""
Алгоритм решения следующий:
1) Перебираем все возможные маски маски
2) Получаем адрес сети (конъюнкция маски и адреса узла)
3) Перебираем адреса узлов сети и считаем кол-во с 10 единицами
4) Если их 15 - то нашли подходяшую маску, иначе продолжаем перебирать
"""

# Значения, которые может принимать байт маски
mask_values = [255 - sum([2**j for j in range(0, i)]) for i in range(0, 8)]

# Всевозможные значения масок (34 штуки)
masks = [[255, 255, 255, i] for i in mask_values
         ] + [[255, 255, i, 0] for i in mask_values
              ] + [[255, i, 0, 0] for i in mask_values
                   ] + [[i, 0, 0, 0] for i in mask_values
                        ] + [[0, 0, 0, 0]]

# Адрес известного узла
node = [143, 131, 211, 37]
# Для каждой маски
for mask in masks:
    # Считаем количество нулей
    zeros = sum(8 - bin(byte).count('1') for byte in mask)
    # Количество адресов = 2**zeros, где seros количество нулей
    subnets = 2**zeros

    # Адрес сети
    net = [node[0] & mask[0], node[1] & mask[1], node[2] & mask[2], node[3] & mask[3]]
    # Переводим в битовую запись
    bit_net = bin(net[0]) + bin(net[1]) + bin(net[2]) + bin(net[3])
    # И считаем количество единиц
    in_net = bit_net.count('1')

    amount = 0
    for i in range(subnets):
        # Количество 1 в узле = количество 1 в номере узла + количество 1 в адресе сети
        if bin(i).count('1') + in_net == 10: amount += 1
        if amount > 15: break

    # Если насчитали 15, то нашли маску
    if amount == 15:
        print(mask)
        # В маске 32 бита, поэтому количество 1 в маске = 32 - количество 0
        print(32-zeros)

