"""
23 задание - это как 16 (рекурсия), но не такое простое
Разберем самое простое: https://inf-ege.sdamgia.ru/problem?id=3607

У исполнителя Калькулятор две команды, которым присвоены номера.
1. Прибавь 2.
2. Умножь на 5.
Первая из них увеличивает число на экране на 2, вторая увеличивает его в 5 раз.
Программа для Калькулятора — это последовательность команд.

Сколько есть программ, которые число 2 преобразуют в число 50?
"""

# Задание решается через написание рекурсии.
# n - число, в которое пришли в результате исполнения некоторых команд.
# на каждом шаге, пока не дойдем до 50 или пока не превысим 50, 
# будем вызывать calc(n+2) и calc(n*5).
# Если вышли за 50 - вернем 0, если попали в 50 - вернем 1.
# Тогда сумма всех вызовов - ответ на задачу.

# ЕСЛИ РЕШЕНИЕ ДОЛГО НЕ ВЫВОДИТСЯ
# и это связано не с тем, что мы забыли написать условие остановки рекурсии
# то имеет смысл воспользоваться волшебным @lru_cache из functools
from functools import lru_cache

@lru_cache(100000)
def calc(n):
    if n == 50: return 1
    if n > 50 : return 0

    # Вернем сумму вызовов, из которых можно прийти к 50
    return calc(n + 2) + calc(n * 5)

print(calc(2))

# Альтренативно вместо суммы из return-ов можно сделать переменную вне функции 
# и в нее делать +1 если получили 50

"""
Существуют другие варианты заданий, где надо посчитать с дополнительными условиями.
Несколько примеров:
1) Нельзя использовать два умножения подряд https://inf-ege.sdamgia.ru/problem?id=46981
2) Траектория вычислений не содержит число n https://inf-ege.sdamgia.ru/problem?id=13471
3) Траектория вычислений содержит число n https://inf-ege.sdamgia.ru/problem?id=13579
4) Комбинация 2) и 3) https://inf-ege.sdamgia.ru/problem?id=15959

Как тогда решать?
Возможны дополнительные переменные в рекурсии, больше if-ов, сделать два запуска рекурсии, ...
Решения:
1) https://github.com/BaronVice/Inf2025/blob/main/23/46981.py
2) https://github.com/BaronVice/Inf2025/blob/main/23/13471.py
3) https://github.com/BaronVice/Inf2025/blob/main/23/13579.py
4) https://github.com/BaronVice/Inf2025/blob/main/23/15959.py

"""