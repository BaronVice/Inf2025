"""
Исполнитель преобразует число на экране.

У исполнителя есть две команды, которые обозначены латинскими буквами:
A. Прибавить 4
B. Умножить на 2

Программа для исполнителя – это последовательность команд.
Сколько существует программ, для которых при исходном числе 13 результатом является число 42?

И попробуем найти ответы для:
a) Траектория вычислений содержит 26;
b) Траектория вычислений не содержит 38;
c) Траектория вычислений содрежит 26, но не содержит 38;
d) Задание со звездочкой: нельзя использовать три операции умножения подряд.
"""

# Это решение основного задания
def f(n):
    if n == 42: return 1
    if n > 42: return 0

    return f(n + 4) + f(n * 2)

# Это решение a)
def a(n, used):
    if n == 42 and used: return 1
    if n > 42: return 0

    if n == 26: used = True
    return a(n + 4, used) + a(n * 2, used)

# Это решение b)
def b(n):
    if n == 42: return 1
    if n > 42: return 0

    if n == 38: return False
    return b(n + 4) + b(n * 2)

# Это решение c)
def c(n, used):
    if n == 42 and used: return 1
    if n > 42: return 0

    if n == 26: used = True
    if n == 38: return False
    return c(n + 4, used) + c(n * 2, used)

def d(n, mult):
    if n == 42: return 1
    if n > 42: return 0

    # Испоьзуя операцию сложения количество умножений подряд обнуляется
    s = d(n + 4, 0)
    # Если два раза подряд испоьзовали умножение, то в этот раз не можем
    if mult != 2:
        # + 1 к использованным подряд умножений
        s += d(n * 2, mult + 1)
    return s

print(f(13))
print(a(13, False))
print(b(13))
print(c(13, False))
print(d(13, 0))