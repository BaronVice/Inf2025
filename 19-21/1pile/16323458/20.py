# 0 - первый ход Пети
# 1 - первый ход Вани
# 2 - второй ход Пети
# 3 - второй ход Вани

# Условие1: Петя не может выиграть за один ход
# Условие2: Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня
# Найдите два таких значения S, при которых у Пети есть выигрышная стратегия.

# game(n, turn) - состояние игры, при котором количество камней в куче n, ход turn
# Вернет 1, если Условие1 и Условие2 соблюдаются, иначе 0
def game(n, turn):
    if turn == 0: # первый ход Пети
        # Петя не может выиграть за один ход
        if n * 5 >= 70: return 0
    if turn == 1: # первый ход Вани
        # Выиграть должен Петя
        if n * 5 >= 70: return 0
    if turn == 2: # второй ход Пети
        # Петя может выиграть своим вторым ходом
        return n * 5 >= 70
    
    if turn % 2 == 0: # Петя
        # один из текущих ходов Пети должен привести его к победе
        return game(n + 1, turn + 1) or game(n + 4, turn + 1) or game(n * 5, turn + 1)
    else: # Ваня
        # ... независимо от того, как будет ходить Ваня -> из всех ходов Вани Петя должен выиграть
        return game(n + 1, turn + 1) and game(n + 4, turn + 1) and game(n * 5, turn + 1)


for s in range(1, 69 + 1):
    if game(s, 0):
        print(s)
        # Полученные значения: 9 и 12
