# https://inf-ege.sdamgia.ru/problem?id=13535

"""
По каналу связи передаются сообщения, содержащие только шесть букв: А, B, C, D, E, F.
Для передачи используется неравномерный двоичный код, удовлетворяющий условию Фано.
Для букв A, B, C используются такие кодовые слова: А — 11, B — 101, C — 0.

Укажите кодовое слово наименьшей возможной длины, которое можно использовать для буквы F.
Если таких слов несколько, укажите то из них,
которое соответствует наименьшему возможному двоичному числу. 

Условие Фано означает, что ни одно кодовое слово не является началом другого кодового слова.
"""

# Является ли слово b началом слова a
# a = "1111"
# b = "11"
# print(a.startswith(b)) -> True

# Каждый раз подбирая слово будем проверять, 
# что оно не является началом других и другие не являются его началом

from itertools import *

# Нагенерируем различные коды длины от 1 до 6 (их должно быть достаточно для подбора трех под условие Фано)
generated = []
for i in range(1, 7):
    p = product("01", repeat = i) # генерация tuple-ов длины i из элементов 0 и 1
    for result in p:
        generated.append( "".join(result) ) # из tuple в строку

answer = "--------------"
# Комбинации троек из generated
cmbs = list(combinations(generated, 3))
for c in cmbs:
    # В задании известны коды трех букв и еще три надо подобрать
    picked = ["11", "101", "0", c[0], c[1], c[2]]
    # Для каждой пары слов проверим, что одно не является началом второго
    pairs = combinations(picked, 2) # комбинации из picked длины 2
    # Проверка всех пар на выполнение условия Фано
    is_good = all(
        [0 if pair[0].startswith(pair[1]) or pair[1].startswith(pair[0]) else 1 for pair in pairs]
    )
    if is_good:
        # Если пара подходит, то выбираем элемент минимальный по длине
        minn = min(answer, c[0], c[1], c[2], key=len)
        # Если длина разная, то берем наименьшее по длине
        if len(answer) != len(minn): answer = minn
        # Иначе берем наименьшее числовое значение
        else: answer = min(answer, minn)

print(answer)