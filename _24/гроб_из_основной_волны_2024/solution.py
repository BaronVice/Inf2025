
"""
Задание:
    Текстовый файл состоит из десятичных цифр, знаков «+» и «*» (сложения и умножения).
    Определите максимальное количество символов в непрерывной последовательности,
    являющейся корректным арифметическим выражением с целыми неотрицательными числами (без знака),
    значение которого равно нуля.

    В этом выражении никакие два знака арифметических операций не стоят рядом.
    Порядок действий определяется по правилам математики.
    В записи чисел отсутствуют незначащие (ведущие) нули.

    В ответе укажите количество символов.
"""

"""
Решение:
    Пока что пропустим условие '...значение которого равно нуля.'
    Условия, что последовательность правильная:
    1) Последовательность начинается и заканчивается на цифру (от 0 до 9)
    2) В последовательности не может быть два знака операции подряд: ++, +*, *+, **
    3) В последовательности не может быть двух и более подряд идущих 0: 0+0 можно, 0+0123 нельзя

    Теперь надо вернуться к условию '...значение которого равно нуля.'
    В задании прописано: 'Порядок действий определяется по правилам математики.'
    Выражение равно нулю, если сумма его слагаемых равна 0.
    Тогда можно набирать слагаемые вида:
    1) 0
    2) 0*число (0*123*456*...)
    3) число*0 (123*456*0)
"""

s = open("Inf2025\\_24\\гроб_из_основной_волны_2024\\24_17563.txt").read()

# пусть знак @ является разделителем правильных последовательностей
# удаление всех 2+ подряд идущих знаков
s = s.replace('++', '@')
s = s.replace('**', '@')
s = s.replace('+*', '@')
s = s.replace('*+', '@')
# на случай, если количество 2+ подряд идущих знаков нечетное
s = s.replace('@+', '@') 
s = s.replace('@*', '@')
s = s.replace('+@', '@') 
s = s.replace('*@', '@')

for i in '123456789':
    s = s.replace('+0'+i, '0@'+i) # ...+0123*... -> ...+0@123*...
    s = s.replace('*0'+i, '0@'+i) # ...*0123*... -> ...*0@123*...
    s = s.replace(i+'0', i+'^')

while '^0' in s:
    s = s.replace('^0', '^^')
# 2+ подряд идущих 0 сжимаем до одного 0
while '00' in s:
    s = s.replace('00', '0') # я не уверен, но вроде бы это O(n^2)
s = s.replace('^', '0')

s = s.replace('-0-', '@')
s = s.replace('*0*', '@')
s = s.replace('-0*', '@')
s = s.replace('*0-', '@')

sequences = []
for seq in s.split('@'):
    if seq != '': sequences.append(seq)

max_len = 0
for seq in sequences:
    if "32373" in seq:
        print(seq)
    plus = seq.split('+')
    subsequences = [len(subseq) if '0' in subseq.split('*') else -10**9 for subseq in plus]

    dp = [0]
    for i in range(len(subsequences)): dp.append(max(0, dp[-1]) + subsequences[i] + 1)
    max_len = max(max_len, max(dp)-1)

print(max_len)